{"version":3,"sources":["images/banner5.png","images/banner2.jpg","images/bg2.png","Projects.js","Home.js","BGParticles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","particleConfig","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","array","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","mouse","BGParticles","className","params","height","App","props","toggle","bind","state","isOpen","this","setState","Banner","mainDiv","textAlign","backgroundImage","Background","backgroundSize","style","position","top","transform","class","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,IAA0B,iC,+NCGpBC,YCDJA,Y,iCCCbC,EAAiB,CACrBC,UAAW,CACTC,OAAQ,CACNC,MAAO,IACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLJ,MAAO,WAETK,MAAO,CACLC,KAAM,SACNC,OAAQ,CACNC,MAAO,EACPJ,MAAO,YAYXK,QAAS,CACPT,MAAO,EACPU,QAAQ,EACRC,KAAM,CACJT,QAAQ,EACRU,MAAO,EACPC,YAAa,EACbC,MAAM,IAGVC,KAAM,CACJf,MAAO,EACPU,QAAQ,EACRC,KAAM,CACJT,QAAQ,EACRU,MAAO,GACPI,SAAU,EACVF,MAAM,IAGVG,YAAa,CACXf,QAAQ,EACRgB,SAAU,IACVd,MAAO,OACPK,QAAS,EACTD,MAAO,GAETW,KAAM,CACJjB,QAAQ,EACRU,MAAO,EACPQ,UAAW,OACXV,QAAQ,EACRW,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACPtB,QAAQ,EACRuB,QAAS,IACTC,QAAS,MAGbC,MAAO,IAETC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACP7B,QAAQ,EACR8B,KAAM,UAERC,QAAS,CACP/B,QAAQ,EACR8B,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAK,CACHlB,SAAU,IACVD,YAAY,CACVR,QAAS,IAGb4B,OAAO,CACLnB,SAAU,IACVH,KAAM,EACNuB,SAAU,IAEZC,QAAQ,CACNrB,SAAU,IACVoB,SAAU,IAEZE,KAAK,CACHC,aAAc,GAEhBC,OAAO,CACLD,aAAc,IAGlBE,MAAM,IAER,eAAiB,GAWJC,E,iLANX,OACI,kBAAC,IAAD,CAAWC,UAAU,cAAcC,OAAQjD,EAAgBkD,OAAO,c,GAHhDnD,a,iBCzGLoD,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACTC,QAAQ,GALK,E,sEAUfC,KAAKC,SAAS,CACZF,QAASC,KAAKF,MAAMC,W,+BASMG,IAL5B,IAUMC,EAAU,CACdV,OAAQ,QACRvC,MAAO,QACPkD,UAAW,SACXC,gBAAiB,OAASC,IAAa,IACvCC,eAAgB,SASlB,OAsBE,yBAAKC,MAAOL,GACV,yBAAKK,MA9Ba,CACpBC,SAAU,WACVvD,MAAO,OACPwD,IAAK,MACLC,UAAW,qBACXxD,QAAS,QA0BL,wBAAIyD,MAAM,8BAAV,mBACA,wCAEF,kBAAC,EAAD,W,GAnEuBC,IAAMvE,WCEnBwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e2357ea2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner5.6c9b8c0f.png\";","module.exports = __webpack_public_path__ + \"static/media/banner2.a5d7d2f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.fa16ff26.png\";","import React, {Component } from 'react';\nimport Banner from './images/banner5.png';\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n      }\n      \n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    render() {\n        const white = {\n            backgroundImage: \"url(\" + Banner + \")\",\n            height: '100vh'\n        }\n        return (\n            <div class=\"container-fluid text-center\" style={white}>\n                <h1>Projects Page</h1>\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React, {Component } from 'react';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n      }\n      \n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    render() {\n        const white = {\n            background: 'red',\n            height: '100%'\n        }\n        const child = {\n            background: 'green',\n            position: 'absolute',\n            paddingTop: '10%',\n            textAlign: 'center'\n        }\n        return (\n            <div style={white}>\n                <div class=\"container-fluid text-center\" style={child}>\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                        <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                        <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n                <div class=\"container text-center\">\n                    <h1>Home Page</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n\nconst particleConfig = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: '#3484C2'\n    },\n    shape: {\n      type: 'circle',\n      stroke: {\n        width: 0,\n        color: '#F23D24'\n      }\n    //   },\n    //   polygon: {\n    //     nb_sides: 5\n    //   },\n    //   image: {\n    //     src: '',\n    //     width: 100,\n    //     height: 100\n    //   }\n    },\n    opacity: {\n      value: 1,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 2,\n        opacity_min: 0,\n        sync: false\n      }\n    },\n    size: {\n      value: 5,\n      random: true,\n      anim: {\n        enable: true,\n        speed: 10,\n        size_min: 0,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: false,\n      distance: 100,\n      color: '#fff',\n      opacity: 1,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      direction: 'none',\n      random: true,\n      straight: false,\n      out_mode: 'out',\n      bounce: true,\n      attract: {\n        enable: false,\n        rotateX: 3000,\n        rotateY: 3000\n      }\n    },\n    array: []\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'bubble'\n      },\n      onclick: {\n        enable: true,\n        mode: 'repulse'\n      },\n      resize: true\n    },\n    modes: {\n      grab:{\n        distance: 100,\n        line_linked:{\n          opacity: 1\n        }\n      },\n      bubble:{\n        distance: 200,\n        size: 2,\n        duration: 0.4\n      },\n      repulse:{\n        distance: 200,\n        duration: 0.4\n      },\n      push:{\n        particles_nb: 4\n      },\n      remove:{\n        particles_nb: 2\n      }\n    },\n    mouse:{}\n  },\n  \"retina_detect\": true\n}\n\nclass BGParticles extends Component {\n  render() {\n    return (\n        <Particles className=\"particle-bg\" params={particleConfig} height=\"100vh\"/>\n    );\n  }\n}\n\nexport default BGParticles;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport Projects from './Projects';\nimport Home from './Home';\nimport Banner from './images/banner2.jpg';\nimport BGParticles from './BGParticles';\nimport Background from './images/bg2.png'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n        isOpen: false\n      };\n    }\n    \n    toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n    render() {\n      const navbar = {\n        background: 'black',\n        opacity: '0.5'\n      };\n      const bannerStyle = {\n        backgroundImage: \"url(\" + Banner + \")\"\n      }\n      const spacer = {\n        height: '100px'\n      }\n      const mainDiv = {\n        height: '100vh',\n        width: '100vw',\n        textAlign: 'center',\n        backgroundImage: \"url(\" + Background + \")\",\n        backgroundSize: '100vw'\n      }\n      const centerElement = {\n        position: 'absolute',\n        width: '100%',\n        top: '40%',\n        transform: 'translate(0, -40%)',\n        opacity: '0.8'\n      }\n      return (\n        // <Router>\n        //   <div style={mainDiv}>\n        //     <div style={bannerStyle}>\n        //       <nav class=\"navbar sticky-top navbar-expand-lg navbar-light\" style={navbar}>\n        //           <h4 class=\"pl-3 pr-1 float-right display-4 text-white-50 font-weight-bold\">Michael Keohane</h4>\n        //                   <ul class=\"navbar-nav mr-auto\">\n        //                           <form class=\"form-inline my-2 my-lg-0 p-2\">\n        //                                   <h2 class=\"pl-5 text-white-50\"></h2>\n        //                                   <Link class=\"nav-link\" to=\"/\"><h2 class=\"pl-5 text-white-50\">Home</h2></Link>\n        //                                   <Link class=\"nav-link\" to=\"/projects\"><h2 class=\"pl-5 text-white-50\">My Projects</h2></Link>\n        //                                   <a class=\"nav-link\" href=\"#\"><h2 class=\"pl-5 text-white-50\">Weekly Blog</h2></a>\n        //                           </form>\n        //                   </ul>\n        //           </nav>\n        //           <div style={spacer}></div>\n        //           <Route path=\"/\" exact component={Home} />\n        //           <Route path=\"/Projects\" exact component={Projects} />\n        //       </div>\n        //     </div>\n        //   </Router>\n\n        <div style={mainDiv}>\n          <div style={centerElement}>\n            <h1 class=\"display-1 font-weight-bold\">Michael Keohane</h1>\n            <h1>Welcome</h1>\n          </div>\n          <BGParticles />\n        </div>\n      );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}